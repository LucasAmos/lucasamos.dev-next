/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Book = {
  _id: string;
  _type: "book";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  author: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  startDate: string;
  finishDate?: string;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "category";
  };
  estimated: boolean;
  url?: string;
  audiobook?: boolean;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name: string;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height: number;
  width: number;
  aspectRatio: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x: number;
  y: number;
  height: number;
  width: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top: number;
  bottom: number;
  left: number;
  right: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes =
  | Book
  | Category
  | Author
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/sanity/queries/books.ts
// Variable: BOOKS_QUERY
// Query: *[_type == "book" && finishDate ==null || finishDate >= $yearStart && finishDate <= $yearEnd] | order(startDate desc) {    _id,    audiobook,    author -> {name},    category -> {name},    estimated,    finishDate,    startDate,    title,    url  }
export type BOOKS_QUERYResult = Array<
  | {
      _id: string;
      audiobook: null;
      author: null;
      category: null;
      estimated: null;
      finishDate: null;
      startDate: null;
      title: null;
      url: null;
    }
  | {
      _id: string;
      audiobook: null;
      author: null;
      category: null;
      estimated: null;
      finishDate: null;
      startDate: null;
      title: string | null;
      url: string | null;
    }
  | {
      _id: string;
      audiobook: boolean | null;
      author: {
        name: string;
      };
      category: {
        name: string;
      } | null;
      estimated: boolean;
      finishDate: string | null;
      startDate: string;
      title: string;
      url: string | null;
    }
>;

// Source: ./src/sanity/queries/booksByYear.ts
// Variable: BOOKS_BY_YEAR_QUERY
// Query: *[_type == "book" && finishDate >= $yearStart && finishDate <= $yearEnd] | order(startDate desc) {    _id,    audiobook,    author -> {name},    category -> {name},    estimated,    finishDate,    startDate,    title,    url  }
export type BOOKS_BY_YEAR_QUERYResult = Array<{
  _id: string;
  audiobook: boolean | null;
  author: {
    name: string;
  };
  category: {
    name: string;
  } | null;
  estimated: boolean;
  finishDate: string | null;
  startDate: string;
  title: string;
  url: string | null;
}>;

// Source: ./src/sanity/queries/booksThisYear.ts
// Variable: BOOKS_THIS_YEAR_QUERY
// Query: *[_type == "book" && (finishDate == null || finishDate >= $yearStart && finishDate <= $yearEnd)] | order(startDate desc) {    _id,    audiobook,    author -> {name},    category -> {name},    estimated,    finishDate,    startDate,    title,    url  }
export type BOOKS_THIS_YEAR_QUERYResult = Array<{
  _id: string;
  audiobook: boolean | null;
  author: {
    name: string;
  };
  category: {
    name: string;
  } | null;
  estimated: boolean;
  finishDate: string | null;
  startDate: string;
  title: string;
  url: string | null;
}>;
// Variable: BOOKS_THIS_YEAR_MULTI_QUERY
// Query: { 'books': *[_type == "book" && (finishDate == null || finishDate >= $yearStart && finishDate <= $yearEnd)] | order(startDate desc) {    _id,    audiobook,    author -> {name},    category -> {name},    estimated,    finishDate,    startDate,    title,    url  },  'inprogress': count(*[_type == "book" && finishDate== null  ]),  'finished': count(*[_type == "book" && (finishDate >= $yearStart && finishDate <= $yearEnd)]) }
export type BOOKS_THIS_YEAR_MULTI_QUERYResult = {
  books: Array<{
    _id: string;
    audiobook: boolean | null;
    author: {
      name: string;
    };
    category: {
      name: string;
    } | null;
    estimated: boolean;
    finishDate: string | null;
    startDate: string;
    title: string;
    url: string | null;
  }>;
  inprogress: number;
  finished: number;
};

// Source: ./src/sanity/queries/oldestbook.ts
// Variable: OLDEST_BOOK_QUERY
// Query: *[_type == "book"] | order(finishDate asc)[0] {    finishDate}
export type OLDEST_BOOK_QUERYResult = {
  finishDate: string | null;
} | null;
